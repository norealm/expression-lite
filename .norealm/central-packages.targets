<Project InitialTargets="CheckPackageReferences">

  <PropertyGroup>
    <CentralPackagesFile Condition="'$(CentralPackagesFile)' == '' OR !Exists('$(CentralPackagesFile)')">$(RootDir)Packages.props</CentralPackagesFile>
    <CentralPackagesFile Condition="'$(CentralPackagesFile)' == ''">$(MSBuildStartupDirectory)/Packages.props</CentralPackagesFile>
    <EnableCentralPackageVersions Condition="!Exists('$(CentralPackagesFile)')">false</EnableCentralPackageVersions>
    <MSBuildAllProjects Condition="'$(MSBuildToolsVersion)' != 'Current' And '$(EnableCentralPackageVersions)' != 'false'">$(CentralPackagesFile);$(MSBuildAllProjects)</MSBuildAllProjects>
  </PropertyGroup>

  <ItemDefinitionGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <GlobalPackageReference>
      <IncludeAssets>Analyzers;Build;BuildMultitargeting;BuildTransitive</IncludeAssets>
      <PrivateAssets>All</PrivateAssets>
    </GlobalPackageReference>
  </ItemDefinitionGroup>

  <ItemGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <PackageReference Update="Microsoft.AspNetCore.App"
                      Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true'"
                      IsImplicitlyDefined="true" />

    <PackageReference Update="Microsoft.AspNetCore.All"
                      Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true'"
                      IsImplicitlyDefined="true" />

    <_PackageReferenceWithVersion Include="@(PackageReference->HasMetadata('Version'))" />
    <_OriginalPackageReference Include="@(PackageReference->ClearMetadata())" />
  </ItemGroup>

  <Import Project="$(CentralPackagesFile)" Condition=" '$(EnableCentralPackageVersions)' != 'false' " />

  <ItemGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <PackageReference Include="@(GlobalPackageReference)" />

    <_PackageReferenceWithVersionOverrideButNoCentralVersion Include="@(PackageReference->HasMetadata('VersionOverride')->ClearMetadata())"
                                                             Exclude="@(PackageReference->HasMetadata('Version'))" />

    <_PackageReferenceWithVersionOverride Include="@(PackageReference->HasMetadata('VersionOverride'))"
                                          Version="%(VersionOverride)" />

    <PackageReference Remove="@(_PackageReferenceWithVersionOverride)" />
    <PackageReference Include="@(_PackageReferenceWithVersionOverride)" />
    <_PackageReferenceWithVersionOverride Remove="@(_PackageReferenceWithVersionOverride)" />
  </ItemGroup>

  <Target Name="CheckPackageReferences"
          Condition=" '$(EnableCentralPackageVersions)' != 'false' And '$(DesignTimeBuild)' != 'true' And @(PackageReference->Count()) > 0 ">

    <ItemGroup>
      <_DuplicateGlobalPackageReference Include="@(_OriginalPackageReference)"
                                        Condition=" '@(GlobalPackageReference)' == '@(_OriginalPackageReference)' and '%(Identity)' != '' " />
    </ItemGroup>

    <Error
      Text="The package reference '%(_DuplicateGlobalPackageReference.Identity)' is already defined as a GlobalPackageReference in '$(CentralPackagesFile)'.  Individual projects do not need to include a PackageReference if a GlobalPackageReference is declared."
      Condition=" '$(EnableGlobalPackageReferences)' != 'false' And @(_DuplicateGlobalPackageReference->Count()) > 0"
      File="$(MSBuildProjectFullPath)" />

    <Error
      Text="The package reference '%(_PackageReferenceWithVersion.Identity)' should not specify a version.  Please specify the version in '$(CentralPackagesFile)' or set VersionOverride to override the centrally defined version."
      Condition=" @(_PackageReferenceWithVersion->Count()) > 0 And '%(_PackageReferenceWithVersion.IsImplicitlyDefined)' != 'true' And '$(EnablePackageVersionOverride)' != 'false' "
      File="$(MSBuildProjectFullPath) "/>

    <Error
      Text="The package reference '%(_PackageReferenceWithVersion.Identity)' should not specify a version.  Please specify the version in '$(CentralPackagesFile)'."
      Condition=" @(_PackageReferenceWithVersion->Count()) > 0 And '%(_PackageReferenceWithVersion.IsImplicitlyDefined)' != 'true' And '$(EnablePackageVersionOverride)' == 'false'"
      File="$(MSBuildProjectFullPath) "/>

    <Error
      Text="The package reference '%(PackageReference.Identity)' must have a version defined in '$(CentralPackagesFile)'."
      Condition=" '%(PackageReference.IsImplicitlyDefined)' != 'true' And '%(PackageReference.Version)' == '' "
      File="$(MSBuildProjectFullPath)" />

    <Error
      Text="The package reference '%(_PackageReferenceWithVersionOverrideButNoCentralVersion.Identity)' must have a version defined in '$(CentralPackagesFile)'."
      Condition=" @(_PackageReferenceWithVersionOverrideButNoCentralVersion->Count()) > 0 "
      File="$(MSBuildProjectFullPath)" />
  </Target>

</Project>
